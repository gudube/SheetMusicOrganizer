<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:modelItems="clr-namespace:SheetMusicOrganizer.Model.Items"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                    xmlns:tools="clr-namespace:SheetMusicOrganizer.View.Tools"
                    xmlns:windows="clr-namespace:SheetMusicOrganizer.View.Windows"
                    x:Class="SheetMusicOrganizer.View.Styles.SpecificStyles">
    <tools:MasteryColorConverter x:Key="MasteryColorConverter"/>
    <tools:MultiplicationConverter x:Key="MultiplicationConverter"/>

    <Style x:Key="MasteryListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=(modelItems:MasteryItem.IsSelected)}"/>
    </Style>

    <!--#region Songs datagrid-->
    <Style x:Key="SongsDataGrid" TargetType="{x:Type syncfusion:SfDataGrid}" BasedOn="{StaticResource {x:Type syncfusion:SfDataGrid}}">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Songs.Count}" Value="0">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MasteryGridCell" TargetType="{x:Type syncfusion:GridCell}" BasedOn="{StaticResource DataGridText}">
        <Setter Property="Foreground" Value="{Binding Mastery.Name, Converter={StaticResource MasteryColorConverter}}"/>
    </Style>

    <Style x:Key="SongDataGridRow" TargetType="{x:Type syncfusion:VirtualizingCellsControl}" BasedOn="{StaticResource DataGridRow}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowedAsPlaying}" Value="true">
                <Setter Property="Background" Value="{StaticResource SpecialSolidColor}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SongDataGridAlternatingRow" TargetType="{x:Type syncfusion:VirtualizingCellsControl}" BasedOn="{StaticResource DataGridAlternatingRow}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowedAsPlaying}" Value="true">
                <Setter Property="Background" Value="{StaticResource SpecialSolidColor}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region PlayerControl-->
    <Style x:Key="SecondaryAudioToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SimpleButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SpecialSolidColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VolumeSlider" TargetType="{x:Type Slider}" BasedOn="{StaticResource {x:Type Slider}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Session.Player.IsAudioMuted}" Value="true">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region TitleBar -->
    <Style x:Key="WindowTitleBar" TargetType="{x:Type Window}" BasedOn="{StaticResource ControlBackgroundLv1}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="34" GlassFrameThickness="0" CornerRadius="0"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowStyle" Value="ToolWindow">
                <Trigger.Setters>
                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome CaptionHeight="34" GlassFrameThickness="0" CornerRadius="10"/>
                        </Setter.Value>
                    </Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="CaptionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                        <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{StaticResource ClickableSolidColor}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Minimize-->
    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE949;"/>
    </Style>
    <!--Maximize-->
    <Style x:Key="MaximizeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE739;"/>
    </Style>
    <!--Restore-->
    <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE923;"/>
    </Style>
    <!--Close-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE106;"/>
    </Style>
    
    <Style TargetType="{x:Type windows:TitleBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows:TitleBar}">
                    <Border x:Name="MainWindowBorder" BorderBrush="Black" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windows:TitleBar}}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMaximized, FallbackValue=False}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="BorderThickness" Value="8"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid x:Name="parentContainer" Background="{StaticResource BackgroundLv1SolidColor}">
                            <Grid.CommandBindings>
                                <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
                                <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Maximize" />
                                <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Minimize" />
                                <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Restore" />
                            </Grid.CommandBindings>
                            <Grid.Resources>
                                <tools:BooleanToVisibilityTrue x:Key="BooleanToVisibilityTrue"/>
                                <tools:BooleanToVisibilityFalse x:Key="BooleanToVisibilityFalse"/>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height ="Auto"/>
                                <RowDefinition Height ="*"/>
                            </Grid.RowDefinitions>
                            <!--Window chrome-->
                            <Grid Grid.Row="0" Height="30" Background="{StaticResource BackgroundLv4SolidColor}" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <!--App icon-->
                                    <Image Source="/icon.ico" Width="18" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding IsTools, Converter={StaticResource BooleanToVisibilityFalse}, ConverterParameter=true}" />
                                    <TextBlock Foreground="{StaticResource ClickableSolidColor}" Margin="10,0" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=Title}" FontFamily="Arial"/>
                                </StackPanel>
                                <!--Caption buttons-->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                    <Button WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Minimize" Command="{x:Static SystemCommands.MinimizeWindowCommand}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MinimizeButtonStyle}">
                                                <Setter Property="Visibility" Value="{Binding IsTools, Converter={StaticResource BooleanToVisibilityFalse}, ConverterParameter=true}"/>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="RestoreButton" Command="{x:Static SystemCommands.RestoreWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Restore">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource RestoreButtonStyle}">
                                                <Setter Property="Visibility" Value="{Binding IsMaximized, Converter={StaticResource BooleanToVisibilityTrue}, ConverterParameter=true}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTools}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button x:Name="MaximizeButton" Command="{x:Static SystemCommands.MaximizeWindowCommand}" WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Maximize">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaximizeButtonStyle}">
                                                <Setter Property="Visibility" Value="{Binding IsMaximized, Converter={StaticResource BooleanToVisibilityFalse}, ConverterParameter=true}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsTools}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button WindowChrome.IsHitTestVisibleInChrome="True" ToolTip="Close" Command="{x:Static SystemCommands.CloseWindowCommand}">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CloseButtonStyle}">
                                                <Setter Property="Visibility" Value="{Binding CanClose, Converter={StaticResource BooleanToVisibilityTrue}, ConverterParameter=true}"/>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <ContentControl Grid.Row="1" Content="{TemplateBinding Content}" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windows:TitleBar}}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopPartitionMarker" TargetType="{x:Type Grid}" BasedOn="{StaticResource PartitionMarkerBase}">
        <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"/>
        <Setter Property="Margin" Value="0,-1,0,4"/>
        <Setter Property="Canvas.Top">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource MultiplicationConverter}" Mode="OneWay">
                    <Binding ElementName="Scrollbar" Path="ExtentHeight"/>
                    <Binding Path="SyncingSong.PagesStartPercentage"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SettingStartPageScroll, FallbackValue=True}" Value="True">
                <Setter Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BottomPartitionMarker" TargetType="{x:Type Grid}" BasedOn="{StaticResource PartitionMarkerBase}">
        <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"/>
        <Setter Property="Margin" Value="0,-5,0,0"/>
        <Setter Property="Canvas.Top">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource MultiplicationConverter}" Mode="OneWay">
                    <Binding ElementName="Scrollbar" Path="ExtentHeight"/>
                    <Binding Path="SyncingSong.PagesEndPercentage"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SettingEndPageScroll, FallbackValue=True}" Value="True">
                <Setter Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TempPartitionMarker" TargetType="{x:Type Grid}" BasedOn="{StaticResource PartitionMarkerBase}">
        <Setter Property="Width" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}"/>
        <Setter Property="Visibility" Value="Hidden"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SettingStartPageScroll, FallbackValue=False}" Value="True">
                <Setter Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SettingEndPageScroll, FallbackValue=False}" Value="True">
                <Setter Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

</ResourceDictionary>