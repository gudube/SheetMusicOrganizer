<Grid x:Class="MusicPlayerForDrummers.View.LibraryMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicPlayerForDrummers.View"
             xmlns:model="clr-namespace:MusicPlayerForDrummers.Model"
             mc:Ignorable="d" 
             d:DesignHeight="1520" d:DesignWidth="400"
             Style="{StaticResource BackgroundLv2}"
             x:Name="LibraryMenuGrid">
    <Grid.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </Grid.Resources>
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Expander x:Name="PlaylistsExpander" Grid.Row="0" Header="Playlists" IsExpanded="True"> <!-- PLAYLISTS -->
        <ListBox x:Name="PlaylistsListBox" SelectionMode="Single" ItemsSource="{Binding Path=Playlists, Mode=OneWay}" SelectedItem="{Binding Path=SelectedPlaylist, Mode=TwoWay}">
            <ListBox.Resources>
                <DataTemplate DataType="{x:Type model:PlaylistItem}"> <!-- ITEM -->
                    <Grid Tag="{Binding DataContext, ElementName=LibraryMenuGrid}">
                        <Grid.ContextMenu>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                                <ContextMenu.Style> <!-- Hide the ContextMenu if playlist locked -->
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.Locked}" Value="True">
                                                <Setter Property="ContextMenu.Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContextMenu.Style>
                                <MenuItem Header="Rename Playlist" Command="{Binding Tag.RenamePlaylistCommand}"/>
                                <MenuItem Header="Delete Playlist" Command="{Binding Tag.DeletePlaylistCommand}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="25"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Name}"/>
                        <TextBox> <!-- when renaming playlist -->
                            <TextBox.Style>
                                <Style>
                                    <Setter Property="TextBox.Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="true" />
                                                <Condition Binding="{Binding Path=DataContext.IsEditingSelectedPlaylist, ElementName=LibraryMenuGrid}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Control.Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Image Grid.Column="1" Source="/View/Resources/lock_64.png" MaxHeight="20" HorizontalAlignment="Right"
                               Visibility="{Binding Locked, Converter={StaticResource BoolToVis}}"/>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type model:AddPlaylistItem}"> <!-- ADD ITEM -->
                    <Grid>
                        <Image x:Name="AddPlaylistImage" Source="/View/Resources/plus_40.png" MaxHeight="20" HorizontalAlignment="Center"/>
                        <TextBox x:Name="AddPlaylistTextBox" Text="{Binding DataContext.NewPlaylistName, ElementName=LibraryMenuGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}},
                                    Path=IsSelected, Converter={StaticResource BoolToVis}}" Margin="4, 2, 4, 2">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=DataContext.CreateNewPlaylistCommand, ElementName=LibraryMenuGrid}" Key="Return"/>
                            </TextBox.InputBindings>
                            <TextBox.Style> <!-- Switch between + button and textbox -->
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="Visibility" Value="Visible">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </DataTemplate>
            </ListBox.Resources>
        </ListBox>
    </Expander>
    <Grid Grid.Row="1"/>
</Grid>
