<UserControl x:Class="MusicPlayerForDrummers.View.Controls.Items.SelectablePlaylistItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:items1="clr-namespace:MusicPlayerForDrummers.Model.Items"
             xmlns:viewModel="clr-namespace:MusicPlayerForDrummers.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="25" d:DesignWidth="200"
             x:Name="Main"
             Background="Transparent"
             d:DataContext="{d:DesignInstance items1:PlaylistItem}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>
    <UserControl.ContextMenu>
        <ContextMenu DataContext="{Binding Path=PlacementTarget.(FrameworkElement.Tag), RelativeSource={RelativeSource Self}, Mode=OneWay}"
                     d:DataContext="{d:DesignInstance viewModel:LibraryVM}"
                     Tag="{Binding Path=PlacementTarget.(FrameworkElement.DataContext), RelativeSource={RelativeSource Self}, Mode=OneWay}">
            <ContextMenu.Style>
                <!-- Hide the ContextMenu if playlist locked -->
                <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(FrameworkElement.Tag).(items1:PlaylistItem.IsLocked), RelativeSource={RelativeSource Self}}"  Value="True">
                            <Setter Property="ContextMenu.Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContextMenu.Style>
            <MenuItem Header="Rename" Command="{Binding Path=EditSelectedPlaylistCommand}"/>
            <MenuItem Header="Delete" Command="{Binding Path=DeleteSelectedPlaylistCommand}"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding Name, Mode=OneWay}"/>
            <TextBlock Grid.Column="1" Text=" (playing)" Foreground="{StaticResource SpecialSolidColor}"
                       Visibility="{Binding IsPlaying, Mode=OneWay, Converter={StaticResource BoolToVis}}"/>
            <Image Grid.Column="2" Source="/View/Resources/lock_64.png" MaxHeight="20" HorizontalAlignment="Right"
                   Visibility="{Binding IsLocked, Mode=OneWay, Converter={StaticResource BoolToVis}}"/>
        </Grid>
        <TextBox Grid.Column="0" x:Name="MainTextBox"
                 Text="{Binding Path=Tag.(viewModel:LibraryVM.EditPlaylistName), Mode=TwoWay, ElementName=Main, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                 Visibility="{Binding IsEditing, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                 IsVisibleChanged="MainTextBox_OnIsVisibleChanged" HorizontalAlignment="Stretch">
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding Path=Tag.(viewModel:LibraryVM.RenameSelectedPlaylistCommand), ElementName=Main}" Key="Return" />
                <KeyBinding Command="{Binding Path=Tag.(viewModel:LibraryVM.CancelEditPlaylistCommand), ElementName=Main}" Key="Escape" />
            </TextBox.InputBindings>
        </TextBox>
    </Grid>
</UserControl>
